[{"/Users/evelinamalmqvist/innoativa/innovativa/client/src/index.js":"1","/Users/evelinamalmqvist/innoativa/innovativa/client/src/reportWebVitals.js":"2","/Users/evelinamalmqvist/innoativa/innovativa/client/src/App.js":"3","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/Question.js":"4","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/quiz.js":"5","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/nextButton/nextButton.js":"6","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/Quiz.js":"7","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/landingPage/landingPage.js":"8","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/QuestionBody.js":"9","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/RadioButton.js":"10","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/ProgressBar.js":"11","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/QuizResult.js":"12","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/landingPage/location.js":"13","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/Button/Button.js":"14","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/chart/pirGraph.js":"15","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/dropdown/dropdown.js":"16"},{"size":238,"mtime":1610378203682,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1609748706539,"results":"19","hashOfConfig":"18"},{"size":429,"mtime":1610378203669,"results":"20","hashOfConfig":"18"},{"size":368,"mtime":1610378203676,"results":"21","hashOfConfig":"18"},{"size":3034,"mtime":1610378203677,"results":"22","hashOfConfig":"18"},{"size":180,"mtime":1609750985678,"results":"23","hashOfConfig":"18"},{"size":3034,"mtime":1610378203677,"results":"24","hashOfConfig":"18"},{"size":5472,"mtime":1610378203675,"results":"25","hashOfConfig":"18"},{"size":380,"mtime":1610378203677,"results":"26","hashOfConfig":"18"},{"size":421,"mtime":1610378203678,"results":"27","hashOfConfig":"18"},{"size":456,"mtime":1610378203676,"results":"28","hashOfConfig":"18"},{"size":2135,"mtime":1610378203678,"results":"29","hashOfConfig":"18"},{"size":7616,"mtime":1610378203675,"results":"30","hashOfConfig":"18"},{"size":288,"mtime":1610378203670,"results":"31","hashOfConfig":"18"},{"size":908,"mtime":1610378203673,"results":"32","hashOfConfig":"18"},{"size":3996,"mtime":1610378203674,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1rk1wig",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"/Users/evelinamalmqvist/innoativa/innovativa/client/src/index.js",[],["72","73"],"/Users/evelinamalmqvist/innoativa/innovativa/client/src/reportWebVitals.js",[],"/Users/evelinamalmqvist/innoativa/innovativa/client/src/App.js",[],"/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/Question.js",["74"],"/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/quiz.js",[],"/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/nextButton/nextButton.js",[],["75","76"],"/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/Quiz.js",[],"/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/landingPage/landingPage.js",["77","78"],"import React from \"react\";\nimport _ from \"lodash\";\nimport \"../onBoarding/onBoarding.css\";\nimport \"./landingPage.css\";\nimport Dropdown from \"../dropdown/dropdown\";\nimport PirGraph from \"../chart/pirGraph\";\nimport location from \"../landingPage/location\";\nimport Button from \"../Button/Button\";\n\nconst week = [\n  \"Måndag\",\n  \"Tisdag\",\n  \"Onsdag\",\n  \"Torsdag\",\n  \"Fredag\",\n  \"Lördag\",\n  \"Söndag\",\n];\n\nconst place = _.map(location, (place, index) => ({\n  id: index,\n  title: place.place,\n  selected: false,\n  key: \"place\",\n}));\n\nconst days = _.map(week, (value, index) => ({\n  id: index,\n  title: value,\n  selected: false,\n  key: \"days\",\n}));\n\nconst riskLevels = {\n  0: \"mycket låg\",\n  2.5: \"låg\",\n  5: \"mellan hög\",\n  7.5: \"hög\",\n  10: \"mycket hög\",\n};\n\nclass LandingPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      place,\n      floors: [],\n      days,\n      chosenPlace: \"\",\n      chosenFloor: \"\",\n      chosenDay: \"\",\n      hour: 0,\n      graphData: [],\n    };\n  }\n\n  getGreeting = () => {\n    var greeting;\n    var time = new Date().getHours();\n    if (time < 5) {\n      greeting = \"Godnatt\";\n    } else if (time < 10) {\n      greeting = \"Godmorgon\";\n    } else if (time < 14) {\n      greeting = \"Goddag\";\n    } else {\n      greeting = \"Godkväll\";\n    }\n    return greeting.toUpperCase();\n  };\n\n  resetThenSet = (id, key) => {\n    const temp = JSON.parse(JSON.stringify(this.state[key]));\n\n    temp.forEach((item) => (item.selected = false));\n    temp[id].selected = true;\n\n    this.setState({\n      [key]: temp,\n    });\n\n    if (key === \"place\") {\n      this.setState({\n        chosenPlace: temp[id].title,\n        chosenFloor: \"\",\n        chosenDay: \"\",\n        graphData: [],\n      });\n      this.updateFloors(id, key);\n    } else if (key === \"floors\") {\n      this.setState({\n        chosenFloor: temp[id].title,\n      });\n      if (this.state.chosenDay !== \"\") {\n        this.updateGraph();\n      }\n    } else if (key === \"days\") {\n      this.setState({\n        chosenDay: temp[id].title,\n      });\n      this.updateGraph();\n    }\n    this.updateHour();\n  };\n\n  updateFloors = (id, key) => {\n    const temp = JSON.parse(JSON.stringify(this.state[key]));\n    const floors = location.filter((item) => item.place === temp[id].title);\n\n    const tempFloors = [];\n    floors.forEach((value, key) => {\n      console.log(value.floor);\n      let floor = {\n        id: key,\n        title: value.floor,\n        selected: false,\n        key: \"floors\",\n      };\n      tempFloors.push(floor);\n    });\n    this.setState({\n      floors: tempFloors,\n    });\n  };\n\n  updateGraph = () => {\n    const graphData = location\n      .filter((item) => item.place === this.state.chosenPlace)\n      .filter((item) => item.floor === this.state.chosenFloor);\n    this.setState({\n      graphData: graphData[0],\n    });\n  };\n\n  updateHour = () => {\n    const d = new Date();\n    this.state.hour = d.getHours();\n  };\n\n  getRisk = () => {\n    const pir = this.state.graphData[\"data\"][\n      days.filter((item) => item.title === this.state.chosenDay)[0].id\n    ].times.filter((item) => item.time === this.state.hour)[0].pir;\n\n    var closest = Object.keys(riskLevels).reduce(function (prev, curr) {\n      return Math.abs(curr - pir) < Math.abs(prev - pir) ? curr : prev;\n    });\n    return riskLevels[closest];\n  };\n\n  startQuiz = (e) => {\n    this.props.history.push(\"/Quiz\");\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <h3 className=\"caption\">{this.getGreeting()}</h3>\n          <h1>Virustider</h1>\n          <div className=\"dd-wrapper\">\n            <div className=\"dd-flex-wrapper\">\n              <div className=\"place\">\n                <Dropdown\n                  title=\"Välj plats\"\n                  list={this.state.place}\n                  resetThenSet={this.resetThenSet}\n                  onChange={this.updateFloors}\n                  label=\"PLATS\"\n                />\n              </div>\n              {this.state.chosenPlace !== \"\" && (\n                <Dropdown\n                  title=\"Välj våning\"\n                  list={this.state.floors}\n                  resetThenSet={this.resetThenSet}\n                  label=\"VÅNING\"\n                />\n              )}\n            </div>\n            <div className=\"dd-flex-wrapper\">\n              {this.state.chosenFloor !== \"\" && (\n                <Dropdown\n                  title=\"Välj dag\"\n                  list={this.state.days}\n                  resetThenSet={this.resetThenSet}\n                  label=\"DAG\"\n                />\n              )}\n            </div>\n          </div>\n          {this.state.chosenDay !== \"\" && (\n            <p className=\"uppercase\">\n              {this.state.chosenDay} {this.state.hour}:00 VANLIGTSVIS{\" \"}\n              <b> {this.getRisk()} smittorisk</b> I {this.state.chosenPlace}{\" \"}\n              VÅNING {this.state.chosenFloor}\n            </p>\n          )}\n        </div>\n        {this.state.graphData != 0 && (\n          <div className=\"graph-wrapper\">\n            <PirGraph\n              data={this.state.graphData}\n              day={\n                days.filter((item) => item.title === this.state.chosenDay)[0].id\n              }\n            />\n          </div>\n        )}\n        <div className=\"button\">\n          <Button\n            children=\"Starta Quiz\"\n            onClick={() => this.startQuiz()}\n          ></Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/QuestionBody.js",[],"/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/RadioButton.js",[],"/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/ProgressBar.js",[],"/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/quiz/QuizResult.js",["79"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"../../components/Button/Button\";\nimport QuestionBody from \"./QuestionBody\";\nimport \"./quiz.scss\";\n\nconst QuizResult = ({ answers }) => {\n  const history = useHistory();\n\n  const [goToSchool, setGoToSchool] = useState(false);\n  const [startAnim, setStartAnim] = useState(false);\n\n  useEffect(() => {\n    const res = answers.find((qa) => qa.a === \"Ja\");\n    if (!res) {\n      setGoToSchool(true);\n    }\n  }, []);\n\n  const handleContinue = (ans) => {\n    // Send to database\n    console.log({ ...answers, ans });\n    setStartAnim(true);\n    setTimeout(() => {\n      history.push(\"/\");\n    }, 4000);\n  };\n\n  // TODO: Fixa annan text beroende på vad användaren klickat i\n  const getRes = () => {\n    if (!goToSchool) {\n      return (\n        <p>\n          Baserat på dina svar rekommenderar vi att du <b>stannar hemma</b> och inte besöker Universitetet\n          <br />\n          <br />\n          För mer information angående Covid-19 pandemin besök{\" \"}\n          <a href=\"https://www.1177.se/Vasterbotten/sjukdomar--besvar/lungor-och-luftvagar/inflammation-och-infektion-ilungor-och-luftror/om-covid-19--coronavirus/covid-19-coronavirus/\">\n            1177\n          </a>\n        </p>\n      );\n    }\n  };\n\n  if (startAnim) {\n    return <div className=\"thanks\">tack för din medverkan!</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"progress\">\n        <section className=\"progress-container\">\n          <h1>Resultat </h1>\n          {getRes()}\n          <QuestionBody />\n        </section>\n        <section className=\"question-bottom\">\n          <div className=\"radio-btns\"></div>\n          <div className=\"continue-btns\">\n            <Button onClick={() => handleContinue({ goesToSchool: true })} outlined>\n              Jag går till skolan ändå\n            </Button>\n            <Button onClick={() => handleContinue({ goesToSchool: false })} filled>\n              Jag stannar hemma\n            </Button>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizResult;\n","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/landingPage/location.js",[],"/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/Button/Button.js",[],"/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/chart/pirGraph.js",["80","81"],"import React from \"react\";\nimport { Chart, LineAdvan, Line, Axis, Tooltip, Legend } from \"bizcharts\";\nimport \"./index.scss\";\n\nconst PirGraph = ({ data, day }) => {\n  // 0 -> måndag, 1 -> tidsag osv\n  const parseData = ({ data }) => {\n    return data[day].times;\n  };\n\n  const scale = {\n    value: { max: 5 },\n  };\n\n  var yLabels = {\n    0: \"låg\",\n    2.5: \"mellan\",\n    5: \"hög\",\n    7.5: \"varing\",\n    10: \"nejnej\",\n  };\n\n  return (\n    <Chart scale={scale} className=\"chart\" padding={[10, 20, 50, 40]} autoFit height={200} data={parseData(data)}>\n      <Axis name=\"time\" />\n      <Axis\n        name=\"pir\"\n        label={{\n          formatter: (val) => {\n            return yLabels[val];\n          },\n        }}\n      />\n      <Tooltip crosshairs={{ type: \"y\" }} />\n      <Line style={{ lineWidth: 4 }} shape=\"smooth\" position=\"time*pir\" color=\"#F28482\" />\n    </Chart>\n  );\n};\n\nexport default PirGraph;\n","/Users/evelinamalmqvist/innoativa/innovativa/client/src/components/dropdown/dropdown.js",["82"],"import React, { Component } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport \"../dropdown/dropdown.css\";\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    const { title } = this.props;\n\n    this.state = {\n      isListOpen: false,\n      headerTitle: title,\n      keyword: \"\",\n    };\n\n    this.searchField = React.createRef();\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    const { list, title } = nextProps;\n\n    const selectedItem = list.filter((item) => item.selected);\n\n    if (selectedItem.length) {\n      return {\n        headerTitle: selectedItem[0].title,\n      };\n    }\n    return { headerTitle: title };\n  }\n\n  componentDidUpdate() {\n    const { isListOpen } = this.state;\n\n    setTimeout(() => {\n      if (isListOpen) {\n        window.addEventListener(\"click\", this.close);\n      } else {\n        window.removeEventListener(\"click\", this.close);\n      }\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"click\", this.close);\n  }\n\n  close = () => {\n    this.setState({\n      isListOpen: false,\n    });\n  };\n\n  selectItem = (item) => {\n    const { resetThenSet } = this.props;\n    const { title, id, key } = item;\n\n    this.setState(\n      {\n        headerTitle: title,\n        isListOpen: false,\n      },\n      () => resetThenSet(id, key)\n    );\n  };\n\n  toggleList = () => {\n    this.setState(\n      (prevState) => ({\n        isListOpen: !prevState.isListOpen,\n        keyword: \"\",\n      }),\n      () => {\n        if (this.state.isListOpen && this.searchField.current) {\n          this.searchField.current.focus();\n          this.setState({\n            keyword: \"\",\n          });\n        }\n      }\n    );\n  };\n\n  filterList = (e) => {\n    this.setState({\n      keyword: e.target.value.toLowerCase(),\n    });\n  };\n\n  listItems = () => {\n    const { list, searchable } = this.props;\n    const { keyword } = this.state;\n\n    let tempList = [...list];\n\n    if (keyword.length) {\n      tempList = list\n        .filter((item) =>\n          item.title.toLowerCase().slice(0, keyword.length).includes(keyword)\n        )\n        .sort((a, b) => {\n          if (a.title < b.title) {\n            return -1;\n          }\n          if (a.title > b.title) {\n            return 1;\n          }\n          return 0;\n        });\n    }\n\n    if (tempList.length) {\n      const unique = [];\n      tempList.map((x) =>\n        unique.filter((a) => a.title == x.title).length > 0\n          ? null\n          : unique.push(x)\n      );\n      tempList = unique;\n      return tempList.map((item) => (\n        <button\n          type=\"button\"\n          className=\"dd-list-item\"\n          key={item.id}\n          onClick={() => this.selectItem(item)}\n        >\n          {item.title} {item.selected && <FontAwesome name=\"check\" />}\n        </button>\n      ));\n    }\n\n    return <div className=\"dd-list-item no-result\">{searchable[1]}</div>;\n  };\n\n  render() {\n    const { searchable } = this.props;\n    const { isListOpen, headerTitle } = this.state;\n    const { label } = this.props;\n\n    return (\n      <div className=\"dd-wrapper\">\n        <label>{label}</label>\n        <button type=\"button\" className=\"dd-header\" onClick={this.toggleList}>\n          <div className=\"dd-header-title\">{headerTitle}</div>\n          {isListOpen ? (\n            <FontAwesome name=\"angle-up\" size=\"2x\" />\n          ) : (\n            <FontAwesome name=\"angle-down\" size=\"2x\" />\n          )}\n        </button>\n        {isListOpen && (\n          <div className={`dd-list ${searchable ? \"searchable\" : \"\"}`}>\n            {searchable && (\n              <input\n                ref={this.searchField}\n                className=\"dd-list-search-bar\"\n                placeholder={searchable[0]}\n                onChange={(e) => this.filterList(e)}\n              />\n            )}\n            <div role=\"list\" className=\"dd-scroll-list\">\n              {this.listItems()}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":14},{"ruleId":"83","replacedBy":"91"},{"ruleId":"85","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":137,"column":5,"nodeType":"95","endLine":137,"endColumn":15},{"ruleId":"96","severity":1,"message":"97","line":200,"column":31,"nodeType":"98","messageId":"99","endLine":200,"endColumn":33},{"ruleId":"100","severity":1,"message":"101","line":18,"column":6,"nodeType":"102","endLine":18,"endColumn":8,"suggestions":"103"},{"ruleId":"87","severity":1,"message":"104","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":26},{"ruleId":"87","severity":1,"message":"105","line":2,"column":49,"nodeType":"89","messageId":"90","endLine":2,"endColumn":55},{"ruleId":"96","severity":1,"message":"106","line":115,"column":38,"nodeType":"98","messageId":"99","endLine":115,"endColumn":40},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'combat' is defined but never used.","Identifier","unusedVar",["107"],["108"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'answers'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'LineAdvan' is defined but never used.","'Legend' is defined but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [answers]",{"range":"112","text":"113"},[525,527],"[answers]"]
