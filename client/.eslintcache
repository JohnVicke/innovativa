[{"C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\index.js":"1","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\App.js":"2","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\quiz\\Quiz.js":"4","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\landingPage\\landingPage.js":"5","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\quiz\\QuestionBody.js":"6","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\quiz\\QuizResult.js":"7","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\quiz\\RadioButton.js":"8","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\quiz\\ProgressBar.js":"9","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\Button\\Button.js":"10","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\landingPage\\location.js":"11","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\dropdown\\dropdown.js":"12","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\chart\\pirGraph.js":"13"},{"size":248,"mtime":1610026999290,"results":"14","hashOfConfig":"15"},{"size":443,"mtime":1610379715342,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1607871632593,"results":"17","hashOfConfig":"15"},{"size":3138,"mtime":1610379732155,"results":"18","hashOfConfig":"15"},{"size":5693,"mtime":1610379732153,"results":"19","hashOfConfig":"15"},{"size":400,"mtime":1610026999274,"results":"20","hashOfConfig":"15"},{"size":2209,"mtime":1610379715352,"results":"21","hashOfConfig":"15"},{"size":436,"mtime":1610026999277,"results":"22","hashOfConfig":"15"},{"size":478,"mtime":1610026999271,"results":"23","hashOfConfig":"15"},{"size":300,"mtime":1610026999249,"results":"24","hashOfConfig":"15"},{"size":8064,"mtime":1610379732153,"results":"25","hashOfConfig":"15"},{"size":4167,"mtime":1610379732149,"results":"26","hashOfConfig":"15"},{"size":948,"mtime":1610379732143,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1qhy0rw",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\index.js",[],["59","60"],"C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\App.js",[],"C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\quiz\\Quiz.js",[],"C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\landingPage\\landingPage.js",["61","62"],"import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport \"../onBoarding/onBoarding.css\";\r\nimport \"./landingPage.css\";\r\nimport Dropdown from \"../dropdown/dropdown\";\r\nimport PirGraph from \"../chart/pirGraph\";\r\nimport location from \"../landingPage/location\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst week = [\r\n  \"Måndag\",\r\n  \"Tisdag\",\r\n  \"Onsdag\",\r\n  \"Torsdag\",\r\n  \"Fredag\",\r\n  \"Lördag\",\r\n  \"Söndag\",\r\n];\r\n\r\nconst place = _.map(location, (place, index) => ({\r\n  id: index,\r\n  title: place.place,\r\n  selected: false,\r\n  key: \"place\",\r\n}));\r\n\r\nconst days = _.map(week, (value, index) => ({\r\n  id: index,\r\n  title: value,\r\n  selected: false,\r\n  key: \"days\",\r\n}));\r\n\r\nconst riskLevels = {\r\n  0: \"mycket låg\",\r\n  2.5: \"låg\",\r\n  5: \"mellan hög\",\r\n  7.5: \"hög\",\r\n  10: \"mycket hög\",\r\n};\r\n\r\nclass LandingPage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      place,\r\n      floors: [],\r\n      days,\r\n      chosenPlace: \"\",\r\n      chosenFloor: \"\",\r\n      chosenDay: \"\",\r\n      hour: 0,\r\n      graphData: [],\r\n    };\r\n  }\r\n\r\n  getGreeting = () => {\r\n    var greeting;\r\n    var time = new Date().getHours();\r\n    if (time < 5) {\r\n      greeting = \"Godnatt\";\r\n    } else if (time < 10) {\r\n      greeting = \"Godmorgon\";\r\n    } else if (time < 14) {\r\n      greeting = \"Goddag\";\r\n    } else {\r\n      greeting = \"Godkväll\";\r\n    }\r\n    return greeting.toUpperCase();\r\n  };\r\n\r\n  resetThenSet = (id, key) => {\r\n    const temp = JSON.parse(JSON.stringify(this.state[key]));\r\n\r\n    temp.forEach((item) => (item.selected = false));\r\n    temp[id].selected = true;\r\n\r\n    this.setState({\r\n      [key]: temp,\r\n    });\r\n\r\n    if (key === \"place\") {\r\n      this.setState({\r\n        chosenPlace: temp[id].title,\r\n        chosenFloor: \"\",\r\n        chosenDay: \"\",\r\n        graphData: [],\r\n      });\r\n      this.updateFloors(id, key);\r\n    } else if (key === \"floors\") {\r\n      this.setState({\r\n        chosenFloor: temp[id].title,\r\n      });\r\n      if (this.state.chosenDay !== \"\") {\r\n        this.updateGraph();\r\n      }\r\n    } else if (key === \"days\") {\r\n      this.setState({\r\n        chosenDay: temp[id].title,\r\n      });\r\n      this.updateGraph();\r\n    }\r\n    this.updateHour();\r\n  };\r\n\r\n  updateFloors = (id, key) => {\r\n    const temp = JSON.parse(JSON.stringify(this.state[key]));\r\n    const floors = location.filter((item) => item.place === temp[id].title);\r\n\r\n    const tempFloors = [];\r\n    floors.forEach((value, key) => {\r\n      console.log(value.floor);\r\n      let floor = {\r\n        id: key,\r\n        title: value.floor,\r\n        selected: false,\r\n        key: \"floors\",\r\n      };\r\n      tempFloors.push(floor);\r\n    });\r\n    this.setState({\r\n      floors: tempFloors,\r\n    });\r\n  };\r\n\r\n  updateGraph = () => {\r\n    const graphData = location\r\n      .filter((item) => item.place === this.state.chosenPlace)\r\n      .filter((item) => item.floor === this.state.chosenFloor);\r\n    this.setState({\r\n      graphData: graphData[0],\r\n    });\r\n  };\r\n\r\n  updateHour = () => {\r\n    const d = new Date();\r\n    this.state.hour = d.getHours();\r\n  };\r\n\r\n  getRisk = () => {\r\n    const pir = this.state.graphData[\"data\"][\r\n      days.filter((item) => item.title === this.state.chosenDay)[0].id\r\n    ].times.filter((item) => item.time === this.state.hour)[0].pir;\r\n\r\n    var closest = Object.keys(riskLevels).reduce(function (prev, curr) {\r\n      return Math.abs(curr - pir) < Math.abs(prev - pir) ? curr : prev;\r\n    });\r\n    return riskLevels[closest];\r\n  };\r\n\r\n  startQuiz = (e) => {\r\n    this.props.history.push(\"/Quiz\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"wrapper\">\r\n          <h3 className=\"caption\">{this.getGreeting()}</h3>\r\n          <h1>Virustider</h1>\r\n          <div className=\"dd-wrapper\">\r\n            <div className=\"dd-flex-wrapper\">\r\n              <div className=\"place\">\r\n                <Dropdown\r\n                  title=\"Välj plats\"\r\n                  list={this.state.place}\r\n                  resetThenSet={this.resetThenSet}\r\n                  onChange={this.updateFloors}\r\n                  label=\"PLATS\"\r\n                />\r\n              </div>\r\n              {this.state.chosenPlace !== \"\" && (\r\n                <Dropdown\r\n                  title=\"Välj våning\"\r\n                  list={this.state.floors}\r\n                  resetThenSet={this.resetThenSet}\r\n                  label=\"VÅNING\"\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"dd-flex-wrapper\">\r\n              {this.state.chosenFloor !== \"\" && (\r\n                <Dropdown\r\n                  title=\"Välj dag\"\r\n                  list={this.state.days}\r\n                  resetThenSet={this.resetThenSet}\r\n                  label=\"DAG\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          {this.state.chosenDay !== \"\" && (\r\n            <p className=\"uppercase\">\r\n              {this.state.chosenDay} {this.state.hour}:00 VANLIGTSVIS{\" \"}\r\n              <b> {this.getRisk()} smittorisk</b> I {this.state.chosenPlace}{\" \"}\r\n              VÅNING {this.state.chosenFloor}\r\n            </p>\r\n          )}\r\n        </div>\r\n        {this.state.graphData != 0 && (\r\n          <div className=\"graph-wrapper\">\r\n            <PirGraph\r\n              data={this.state.graphData}\r\n              day={\r\n                days.filter((item) => item.title === this.state.chosenDay)[0].id\r\n              }\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"button\">\r\n          <Button\r\n            children=\"Starta Quiz\"\r\n            onClick={() => this.startQuiz()}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\quiz\\QuestionBody.js",[],"C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\quiz\\QuizResult.js",["63"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport QuestionBody from \"./QuestionBody\";\r\nimport \"./quiz.scss\";\r\n\r\nconst QuizResult = ({ answers }) => {\r\n  const history = useHistory();\r\n\r\n  const [goToSchool, setGoToSchool] = useState(false);\r\n  const [startAnim, setStartAnim] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const res = answers.find((qa) => qa.a === \"Ja\");\r\n    if (!res) {\r\n      setGoToSchool(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleContinue = (ans) => {\r\n    // Send to database\r\n    console.log({ ...answers, ans });\r\n    setStartAnim(true);\r\n    setTimeout(() => {\r\n      history.push(\"/\");\r\n    }, 4000);\r\n  };\r\n\r\n  // TODO: Fixa annan text beroende på vad användaren klickat i\r\n  const getRes = () => {\r\n    if (!goToSchool) {\r\n      return (\r\n        <p>\r\n          Baserat på dina svar rekommenderar vi att du <b>stannar hemma</b> och inte besöker Universitetet\r\n          <br />\r\n          <br />\r\n          För mer information angående Covid-19 pandemin besök{\" \"}\r\n          <a href=\"https://www.1177.se/Vasterbotten/sjukdomar--besvar/lungor-och-luftvagar/inflammation-och-infektion-ilungor-och-luftror/om-covid-19--coronavirus/covid-19-coronavirus/\">\r\n            1177\r\n          </a>\r\n        </p>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (startAnim) {\r\n    return <div className=\"thanks\">tack för din medverkan!</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"progress\">\r\n        <section className=\"progress-container\">\r\n          <h1>Resultat </h1>\r\n          {getRes()}\r\n          <QuestionBody />\r\n        </section>\r\n        <section className=\"question-bottom\">\r\n          <div className=\"radio-btns\"></div>\r\n          <div className=\"continue-btns\">\r\n            <Button onClick={() => handleContinue({ goesToSchool: true })} outlined>\r\n              Jag går till skolan ändå\r\n            </Button>\r\n            <Button onClick={() => handleContinue({ goesToSchool: false })} filled>\r\n              Jag stannar hemma\r\n            </Button>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizResult;\r\n","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\quiz\\RadioButton.js",[],"C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\quiz\\ProgressBar.js",[],"C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\Button\\Button.js",[],"C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\landingPage\\location.js",[],"C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\dropdown\\dropdown.js",["64"],"import React, { Component } from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport \"../dropdown/dropdown.css\";\r\n\r\nclass Dropdown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { title } = this.props;\r\n\r\n    this.state = {\r\n      isListOpen: false,\r\n      headerTitle: title,\r\n      keyword: \"\",\r\n    };\r\n\r\n    this.searchField = React.createRef();\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps) {\r\n    const { list, title } = nextProps;\r\n\r\n    const selectedItem = list.filter((item) => item.selected);\r\n\r\n    if (selectedItem.length) {\r\n      return {\r\n        headerTitle: selectedItem[0].title,\r\n      };\r\n    }\r\n    return { headerTitle: title };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { isListOpen } = this.state;\r\n\r\n    setTimeout(() => {\r\n      if (isListOpen) {\r\n        window.addEventListener(\"click\", this.close);\r\n      } else {\r\n        window.removeEventListener(\"click\", this.close);\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"click\", this.close);\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({\r\n      isListOpen: false,\r\n    });\r\n  };\r\n\r\n  selectItem = (item) => {\r\n    const { resetThenSet } = this.props;\r\n    const { title, id, key } = item;\r\n\r\n    this.setState(\r\n      {\r\n        headerTitle: title,\r\n        isListOpen: false,\r\n      },\r\n      () => resetThenSet(id, key)\r\n    );\r\n  };\r\n\r\n  toggleList = () => {\r\n    this.setState(\r\n      (prevState) => ({\r\n        isListOpen: !prevState.isListOpen,\r\n        keyword: \"\",\r\n      }),\r\n      () => {\r\n        if (this.state.isListOpen && this.searchField.current) {\r\n          this.searchField.current.focus();\r\n          this.setState({\r\n            keyword: \"\",\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  filterList = (e) => {\r\n    this.setState({\r\n      keyword: e.target.value.toLowerCase(),\r\n    });\r\n  };\r\n\r\n  listItems = () => {\r\n    const { list, searchable } = this.props;\r\n    const { keyword } = this.state;\r\n\r\n    let tempList = [...list];\r\n\r\n    if (keyword.length) {\r\n      tempList = list\r\n        .filter((item) =>\r\n          item.title.toLowerCase().slice(0, keyword.length).includes(keyword)\r\n        )\r\n        .sort((a, b) => {\r\n          if (a.title < b.title) {\r\n            return -1;\r\n          }\r\n          if (a.title > b.title) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n    }\r\n\r\n    if (tempList.length) {\r\n      const unique = [];\r\n      tempList.map((x) =>\r\n        unique.filter((a) => a.title == x.title).length > 0\r\n          ? null\r\n          : unique.push(x)\r\n      );\r\n      tempList = unique;\r\n      return tempList.map((item) => (\r\n        <button\r\n          type=\"button\"\r\n          className=\"dd-list-item\"\r\n          key={item.id}\r\n          onClick={() => this.selectItem(item)}\r\n        >\r\n          {item.title} {item.selected && <FontAwesome name=\"check\" />}\r\n        </button>\r\n      ));\r\n    }\r\n\r\n    return <div className=\"dd-list-item no-result\">{searchable[1]}</div>;\r\n  };\r\n\r\n  render() {\r\n    const { searchable } = this.props;\r\n    const { isListOpen, headerTitle } = this.state;\r\n    const { label } = this.props;\r\n\r\n    return (\r\n      <div className=\"dd-wrapper\">\r\n        <label>{label}</label>\r\n        <button type=\"button\" className=\"dd-header\" onClick={this.toggleList}>\r\n          <div className=\"dd-header-title\">{headerTitle}</div>\r\n          {isListOpen ? (\r\n            <FontAwesome name=\"angle-up\" size=\"2x\" />\r\n          ) : (\r\n            <FontAwesome name=\"angle-down\" size=\"2x\" />\r\n          )}\r\n        </button>\r\n        {isListOpen && (\r\n          <div className={`dd-list ${searchable ? \"searchable\" : \"\"}`}>\r\n            {searchable && (\r\n              <input\r\n                ref={this.searchField}\r\n                className=\"dd-list-search-bar\"\r\n                placeholder={searchable[0]}\r\n                onChange={(e) => this.filterList(e)}\r\n              />\r\n            )}\r\n            <div role=\"list\" className=\"dd-scroll-list\">\r\n              {this.listItems()}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;\r\n","C:\\Users\\Alice\\Documents\\Immovativa\\innovativa\\client\\src\\components\\chart\\pirGraph.js",["65","66"],"import React from \"react\";\r\nimport { Chart, LineAdvan, Line, Axis, Tooltip, Legend } from \"bizcharts\";\r\nimport \"./index.scss\";\r\n\r\nconst PirGraph = ({ data, day }) => {\r\n  // 0 -> måndag, 1 -> tidsag osv\r\n  const parseData = ({ data }) => {\r\n    return data[day].times;\r\n  };\r\n\r\n  const scale = {\r\n    value: { max: 5 },\r\n  };\r\n\r\n  var yLabels = {\r\n    0: \"låg\",\r\n    2.5: \"mellan\",\r\n    5: \"hög\",\r\n    7.5: \"varing\",\r\n    10: \"nejnej\",\r\n  };\r\n\r\n  return (\r\n    <Chart scale={scale} className=\"chart\" padding={[10, 20, 50, 40]} autoFit height={200} data={parseData(data)}>\r\n      <Axis name=\"time\" />\r\n      <Axis\r\n        name=\"pir\"\r\n        label={{\r\n          formatter: (val) => {\r\n            return yLabels[val];\r\n          },\r\n        }}\r\n      />\r\n      <Tooltip crosshairs={{ type: \"y\" }} />\r\n      <Line style={{ lineWidth: 4 }} shape=\"smooth\" position=\"time*pir\" color=\"#F28482\" />\r\n    </Chart>\r\n  );\r\n};\r\n\r\nexport default PirGraph;\r\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":137,"column":5,"nodeType":"73","endLine":137,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":200,"column":31,"nodeType":"76","messageId":"77","endLine":200,"endColumn":33},{"ruleId":"78","severity":1,"message":"79","line":18,"column":6,"nodeType":"80","endLine":18,"endColumn":8,"suggestions":"81"},{"ruleId":"74","severity":1,"message":"82","line":115,"column":38,"nodeType":"76","messageId":"77","endLine":115,"endColumn":40},{"ruleId":"83","severity":1,"message":"84","line":2,"column":17,"nodeType":"85","messageId":"86","endLine":2,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":2,"column":49,"nodeType":"85","messageId":"86","endLine":2,"endColumn":55},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'answers'. Either include it or remove the dependency array.","ArrayExpression",["90"],"Expected '===' and instead saw '=='.","no-unused-vars","'LineAdvan' is defined but never used.","Identifier","unusedVar","'Legend' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [answers]",{"range":"93","text":"94"},[542,544],"[answers]"]